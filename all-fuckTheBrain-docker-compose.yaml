version: '3.5'

#Networking (docker networks)
networks:
  pool-network-dev:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.100.100.0/24
  default: 
    name: pool-network-dev

#Volumes
volumes:
  redis_data:
  postgres_data:
  influx_data:
  portainer_data:

#Templates
x-pool-network-dev:
  &pool-network-dev
  networks:
  - pool-network-dev

#Containers
services:

  postgres:
#    restart: unless-stopped
    build: './devops/postgres'
    <<: *pool-network-dev
    image: 'postgres:11'
    container_name: ${IDP_DB_HOST:-postgres}
    hostname: ${IDP_DB_HOST:-postgres}
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - ./devops/postgres:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - devops/pool.dev.env

  redis:
#    restart: on-failure
    <<: *pool-network-dev
    image: redis:4.0.5-alpine
    container_name: redis
    hostname: redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    entrypoint: redis-server --appendonly yes
    environment:
      TZ: "Europe/Kiev"
      LANG: "C.UTF-8"
  
  influx:
    restart: on-failure
    <<: *pool-network-dev
    image: influxdb:1.5-alpine
    container_name: influx
    hostname: influx
    ports:
      - "127.0.0.1:8086:8086"
    volumes:
      - influx_data:/var/lib/influxdb
    env_file:
      - devops/pool.dev.env

  proxy:
    <<: *pool-network-dev
    image: registry.tor.ph/hiveon/proxy:${PROXY_BUILD_NUMBER:-latest-dev}
    container_name: proxy
    hostname: proxy
    ports:
      - "8000:8000"
      - "8099:8090"
    

  hapi:
#    restart: on-failure
    <<: *pool-network-dev
    image: registry.tor.ph/hiveon/pool/hapi:${CI_PIPELINE_ID:-latest}
    container_name: hapi
    hostname: hapi
    ports:
      - "8090:8090"
      - "8080:8080"
    depends_on:
      - influx
      - hadmin
      - hasbin
      - hbilling
      - redis
      - idp
      - hydra
      - proxy
#      - hconsumer
    env_file:
      - devops/pool.dev.env

  hadmin:
#    restart: on-failure
    <<: *pool-network-dev
    image: registry.tor.ph/hiveon/pool/hadmin:${CI_PIPELINE_ID:-latest}
    container_name: hadmin
    hostname: hadmin
    ports:
      - "3002:3002"
    env_file:
      - devops/pool.dev.env

  hasbin:
#    restart: on-failure
    <<: *pool-network-dev
    image: registry.tor.ph/hiveon/pool/hasbin:${CI_PIPELINE_ID:-latest}
    container_name: hasbin
    hostname: hasbin
    env_file:
      - devops/pool.dev.env

  hbilling:
#    restart: on-failure
    <<: *pool-network-dev
    image: registry.tor.ph/hiveon/pool/hbilling:${CI_PIPELINE_ID:-latest}
    container_name: hbilling
    hostname: hbilling
    env_file:
      - devops/pool.dev.env

  hconsumer:
#    restart: on-failure
    <<: *pool-network-dev
    container_name: hconsumer
    hostname: hconsumer
    image: registry.tor.ph/hiveon/consumer:${CI_PIPELINE_ID:-latest}
    depends_on:
      - ${IDP_DB_HOST:-postgres}
      - influx
      - redis
    env_file:
      - devops/pool.dev.env

  hydra:
#    restart: on-failure
    <<: *pool-network-dev
    container_name: hydra
    hostname: hydra
    image: oryd/hydra:${HYDRA_VERSION:-v1.0.0-rc.6_oryOS.10}
    environment:
      - LOG_LEVEL=debug
      - SYSTEM_SECRET=${HYDRA_SYSTEM_SECRET:-youReallyNeedToChangeThis}
      - DATABASE_URL=postgres://${IDP_DB_USER:-idp}:${IDP_DB_PASS:-8GWbz2JF4FMe1Q8X}@${IDP_DB_HOST:-postgres}:5432/${HYDRA_DB_NAME:-hydra}?sslmode=disable
      - OAUTH2_CONSENT_URL=http://${BROWSER_IDP_HOST:-idp}:3000/consent
      - OAUTH2_LOGIN_URL=http://${BROWSER_IDP_HOST:-idp}:3000/login
      - OAUTH2_ISSUER_URL=http://${BROWSER_HYDRA_HOST:-hydra}:4444
      - OAUTH2_SHARE_ERROR_DEBUG=1
    depends_on:
      - hydra-migrate
    command:
      serve all --dangerous-force-http
    ports:
      - "4444:4444"
      - "4445:4445"
    env_file:
      - devops/pool.dev.env

  hydra-migrate:
#    restart: on-failure
    <<: *pool-network-dev
    container_name: hydra-migrate
    hostname: hydra-migrate
    image: oryd/hydra:${HYDRA_VERSION:-v1.0.0-rc.6_oryOS.10}
    environment:
      - LOG_LEVEL=debug
    depends_on:
      - ${IDP_DB_HOST:-postgres}
    command:
      migrate sql postgres://${IDP_DB_USER:-idp}:${IDP_DB_PASS:-8GWbz2JF4FMe1Q8X}@${IDP_DB_HOST:-postgres}:5432/${HYDRA_DB_NAME:-hydra}?sslmode=disable
    env_file:
      - devops/pool.dev.env

  nginx:
    <<: *pool-network-dev
    container_name: nginx
    hostname: nginx
    image: nginx
    volumes:
      - ./devops/nginx/conf.d:/etc/nginx/conf.d
      - ./devops/nginx/ssl:/etc/nginx/ssl
    ports:
      - 80:80
      - 443:443
#    depends_on:
  
  idp:
#    restart: on-failure
    <<: *pool-network-dev
    container_name: idp
    hostname: idp
    image: registry.tor.ph/hiveon/idp:${IDP_BUILD_NUMBER:-latest}
    ports:
      - "3000:3000"
    depends_on:
      - ${IDP_DB_HOST:-postgres}
    env_file:
      - devops/pool.dev.env

  portainer:
    <<: *pool-network-dev
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - "127.0.0.1:9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
